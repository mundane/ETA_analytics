Ext.data.JsonP.Siesta_Test_ExtJS({"superclasses":["Siesta.Test","Siesta.Test.Browser"],"extends":"Siesta.Test.Browser","uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='docClass'>Siesta.Test</a><div class='subclass '><a href='#!/api/Siesta.Test.Browser' rel='Siesta.Test.Browser' class='docClass'>Siesta.Test.Browser</a><div class='subclass '><strong>Siesta.Test.ExtJS</strong></div></div></div><h4>Mixins</h4><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='docClass'>Siesta.Test.ExtJS.Component</a></div><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS.DataView' rel='Siesta.Test.ExtJS.DataView' class='docClass'>Siesta.Test.ExtJS.DataView</a></div><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS.Element' rel='Siesta.Test.ExtJS.Element' class='docClass'>Siesta.Test.ExtJS.Element</a></div><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS.FormField' rel='Siesta.Test.ExtJS.FormField' class='docClass'>Siesta.Test.ExtJS.FormField</a></div><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS.Grid' rel='Siesta.Test.ExtJS.Grid' class='docClass'>Siesta.Test.ExtJS.Grid</a></div><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS.Observable' rel='Siesta.Test.ExtJS.Observable' class='docClass'>Siesta.Test.ExtJS.Observable</a></div><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS.Store' rel='Siesta.Test.ExtJS.Store' class='docClass'>Siesta.Test.ExtJS.Store</a></div><h4>Inherited mixins</h4><div class='dependency'><a href='#!/api/Siesta.Test.Date' rel='Siesta.Test.Date' class='docClass'>Siesta.Test.Date</a></div><div class='dependency'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='docClass'>Siesta.Test.Function</a></div><div class='dependency'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='docClass'>Siesta.Test.More</a></div><div class='dependency'><a href='#!/api/Siesta.Test.Simulate.Event' rel='Siesta.Test.Simulate.Event' class='docClass'>Siesta.Test.Simulate.Event</a></div><div class='dependency'><a href='#!/api/Siesta.Test.TextSelection' rel='Siesta.Test.TextSelection' class='docClass'>Siesta.Test.TextSelection</a></div><h4>Files</h4><div class='dependency'><a href='source/ExtJS2.html#Siesta-Test-ExtJS' target='_blank'>ExtJS.js</a></div></pre><div class='doc-contents'><p>A base class for testing browser and ExtJS applications. It inherit from <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a>\nand adds various ExtJS specific assertions.</p>\n\n<p>In various places where the <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a> accepts the DOM element as the argument (for example, <code>type/click/drag</code> etc),\nthis class will allow you to accept the instance of <code>Ext.Component</code>. In such case the <code>getEl</code> method of the component will be used to\nconvert the component to DOM element.</p>\n\n<p>This file is a reference only, for a getting start guide and manual, please refer to <a href=\"#!/guide/siesta_getting_started\">Getting Started Guide</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-dragDelay' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-cfg-dragDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-cfg-dragDelay' class='name expandable'>dragDelay</a><span> : Int</span></div><div class='description'><div class='short'>The delay between individual drag events (mousemove) ...</div><div class='long'><p>The delay between individual drag events (mousemove)</p>\n<p>Defaults to: <code>25</code></p></div></div></div><div id='cfg-dragPrecision' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-cfg-dragPrecision' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-cfg-dragPrecision' class='name expandable'>dragPrecision</a><span> : Int</span></div><div class='description'><div class='short'>Defines how precisely to follow the path between two points when simulating a drag. ...</div><div class='long'><p>Defines how precisely to follow the path between two points when simulating a drag. 2 indicates every other point will be used.</p>\n\n<pre><code>                                 (low value = slow dragging, high value = fast dragging)\n</code></pre>\n</div></div></div><div id='cfg-moveCursorBetweenPoints' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-cfg-moveCursorBetweenPoints' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-cfg-moveCursorBetweenPoints' class='name expandable'>moveCursorBetweenPoints</a><span> : Boolean</span></div><div class='description'><div class='short'>True to move the mouse cursor between for example two clicks on separate elements (for better visual experience) ...</div><div class='long'><p>True to move the mouse cursor between for example two clicks on separate elements (for better visual experience)</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-simulateEventsWith' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Event' rel='Siesta.Test.Simulate.Event' class='defined-in docClass'>Siesta.Test.Simulate.Event</a><br/><a href='source/Event.html#Siesta-Test-Simulate-Event-cfg-simulateEventsWith' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Event-cfg-simulateEventsWith' class='name expandable'>simulateEventsWith</a><span> : String</span></div><div class='description'><div class='short'>This option is IE9-strict mode (and probably above) specific. ...</div><div class='long'><p>This option is IE9-strict mode (and probably above) specific. It specifies, which events simulation function Siesta should use.\nThe choice is between 'dispatchEvent' (W3C standard) and 'fireEvent' (MS interface) - both are available in IE9 strict mode\nand both activates different event listeners. See this blog post for detailed explanations:\n<a href=\"http://www.digitalenginesoftware.com/blog/archives/76-DOM-Event-Model-Compatibility-or-Why-fireEvent-Doesnt-Trigger-addEventListener.html\">http://www.digitalenginesoftware.com/blog/archives/76-DOM-Event-Model-Compatibility-or-Why-fireEvent-Doesnt-Trigger-addEventListener.html</a></p>\n\n<p>Valid values are \"dispatchEvent\" and \"fireEvent\".</p>\n\n<p>The framework specific adapters chooses the most appropriate value automatically (unless explicitly configured).</p>\n<p>Defaults to: <code>{is: &quot;rw&quot;, init: &quot;dispatchEvent&quot;}</code></p></div></div></div><div id='cfg-waitForTimeout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-cfg-waitForTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-cfg-waitForTimeout' class='name expandable'>waitForTimeout</a><span> : Number</span></div><div class='description'><div class='short'>Default timeout for waitFor (in milliseconds). ...</div><div class='long'><p>Default timeout for <code>waitFor</code> (in milliseconds). Default value is 10000.</p>\n<p>Defaults to: <code>10000</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-Ext' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-Ext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-Ext' class='name expandable'>Ext</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>The alias for getExt ...</div><div class='long'><p>The alias for <a href=\"#!/api/Siesta.Test.ExtJS-method-getExt\" rel=\"Siesta.Test.ExtJS-method-getExt\" class=\"docClass\">getExt</a></p>\n</div></div></div><div id='method-beginAsync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-beginAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-beginAsync' class='name expandable'>beginAsync</a>( <span class='pre'>Number time</span> ) : Object</div><div class='description'><div class='short'>This method starts the \"asynchronous frame\". ...</div><div class='long'><p>This method starts the \"asynchronous frame\". The test will wait for all asynchronous frames to complete before it will finalize.\nThe frame can be finished with the <a href=\"#!/api/Siesta.Test-method-endAsync\" rel=\"Siesta.Test-method-endAsync\" class=\"docClass\">endAsync</a> call.</p>\n\n<p>For example:</p>\n\n<pre><code> var async = t.beginAsync()\n\n Ext.require('Some.Class', function () {\n\n     t.ok(Some.Class, 'Some class was loaded')\n\n     t.endAsync(async)\n })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>time</span> : Number<div class='sub-desc'><p>The maximum time (in ms) to wait until force the finalization of this async frame. Optional. Default time is 15000 ms.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The frame object, which can be used in <a href=\"#!/api/Siesta.Test-method-endAsync\" rel=\"Siesta.Test-method-endAsync\" class=\"docClass\">endAsync</a> call</p>\n</div></li></ul></div></div></div><div id='method-chain' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-chain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-chain' class='name expandable'>chain</a>( <span class='pre'>Function/Object/Array step1, Function/Object step2, Function/Object stepN</span> )</div><div class='description'><div class='short'>This method accept either variable number of arguments (steps) or the array of them. ...</div><div class='long'><p>This method accept either variable number of arguments (steps) or the array of them. Each step should be either a function or configuration object for test actions.\nThese functions / actions will be executed in order.</p>\n\n<p>If step is a function, as the 1st argument, it will receive a callback to call when the step is completed. As the 2nd and further arguments, the step function will receive the\narguments passed to the previous callback.</p>\n\n<p>The last step will receive a no-op callback, which can be ignored or still called.</p>\n\n<p>If a step is presented with action configuration object, then the callback will be called by the action class automatically. Configuration object should contain the \"action\" property,\nspecifying the action class and some other config options (depending from the action class).</p>\n\n<p>Its better to see how it works on the example. For example, when using using only functions:</p>\n\n<pre><code>t.chain(\n    // function receives a callback as 1st argument\n    function (next) {\n        // we pass that callback to the \"click\" method\n        t.click(buttonEl, next)\n    },\n    function (next) {\n        t.type(fieldEl, 'Something', next)\n    },\n    function (next) {\n        t.is(fieldEl.value == 'Something', 'Correct value in the field')\n\n        // call the callback with some arguments\n        next('foo', 'bar')  \n    }, \n    // those arguments are now available as arguments of next step\n    function (next, value1, value2) {\n        t.is(value1, 'foo', 'The arguments for the callback are translated to the arguments of the step')\n        t.is(value2, 'bar', 'The arguments for the callback are translated to the arguments of the step')\n    }\n)\n</code></pre>\n\n<p>The same example, using action configuration objects for first 2 steps:</p>\n\n<pre><code>t.chain(\n    {\n        action      : 'click',\n        target      : buttonEl\n    },\n    {\n        action      : 'type',\n        target      : fieldEl,\n        text        : 'Something'\n    },\n    function (next) {\n        t.is(fieldEl.value == 'Something', 'Correct value in the field')\n\n        next('foo', 'bar')  \n    }, \n    ...\n)\n</code></pre>\n\n<p> For the list of available actions please refer to the classes in the <a href=\"#!/api/Siesta.Test.Action\" rel=\"Siesta.Test.Action\" class=\"docClass\">Siesta.Test.Action</a> namespace. Please note, that each step is expected to complete within the <a href=\"#!/api/Siesta.Harness-cfg-defaultTimeout\" rel=\"Siesta.Harness-cfg-defaultTimeout\" class=\"docClass\">Siesta.Harness.defaultTimeout</a> time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>step1</span> : Function/Object/Array<div class='sub-desc'><p>The function to execute or action configuration, or the array of such</p>\n</div></li><li><span class='pre'>step2</span> : Function/Object<div class='sub-desc'><p>The function to execute or action configuration</p>\n</div></li><li><span class='pre'>stepN</span> : Function/Object<div class='sub-desc'><p>The function to execute or action configuration</p>\n</div></li></ul></div></div></div><div id='method-click' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-click' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-click' class='name expandable'>click</a>( <span class='pre'>Ext.Component/HTMLElement el, [Function callback], [Object scope]</span> )</div><div class='description'><div class='short'>This method wraps the Siesta.Test.Browser.click method with additional check:\nif the 1st passed parameter is an insta...</div><div class='long'><p>This method wraps the <a href=\"#!/api/Siesta.Test.Browser-method-click\" rel=\"Siesta.Test.Browser-method-click\" class=\"docClass\">Siesta.Test.Browser.click</a> method with additional check:\nif the 1st passed parameter is an instance of <code>Ext.form.Field</code>, then click will occur\nin the center of its <code>inputEl</code>. If its an instance of <code>Ext.Component</code> - in the center\nof the component's element.</p>\n\n<p>The following events will be fired, in order:  <code>mouseover</code>, <code>mousedown</code>, <code>mouseup</code>, <code>click</code></p>\n\n<p>See also <a href=\"#!/api/Siesta.Test.Browser-method-click\" rel=\"Siesta.Test.Browser-method-click\" class=\"docClass\">Siesta.Test.Browser.click</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Ext.Component/HTMLElement<div class='sub-desc'><p>The element or Component to click</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call when the condition has been met.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Siesta.Test.Simulate.Mouse-method-click' rel='Siesta.Test.Simulate.Mouse-method-click' class='docClass'>Siesta.Test.Simulate.Mouse.click</a></p></div></div></div><div id='method-clickCQ' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-clickCQ' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-clickCQ' class='name expandable'>clickCQ</a>( <span class='pre'>String selector, Ext.Container root, Function callback</span> )</div><div class='description'><div class='short'>An alias for clickComponentQuery. ...</div><div class='long'><p>An alias for <a href=\"#!/api/Siesta.Test.ExtJS-method-clickComponentQuery\" rel=\"Siesta.Test.ExtJS-method-clickComponentQuery\" class=\"docClass\">clickComponentQuery</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The selector to perform a component query with</p>\n</div></li><li><span class='pre'>root</span> : Ext.Container<div class='sub-desc'><p>The optional root container to start a query from.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call, after clicking all the found components</p>\n</div></li></ul></div></div></div><div id='method-clickComponentQuery' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-clickComponentQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-clickComponentQuery' class='name expandable'>clickComponentQuery</a>( <span class='pre'>String selector, Ext.Container root, Function callback</span> )</div><div class='description'><div class='short'>This method is a simple wrapper around the chainClick - it performs a component query for provided selector starting ...</div><div class='long'><p>This method is a simple wrapper around the chainClick - it performs a component query for provided <code>selector</code> starting from the <code>root</code> container\nand then clicks on all found components, in order:</p>\n\n<pre><code>// click all buttons in the `panel`\nt.clickComponentQuery('button', panel, function () {})\n</code></pre>\n\n<p>The 2nd argument for this method can be omitted and method can be called with 2 arguments only. In this case a global component query will be performed:</p>\n\n<pre><code>// click all buttons in the application\nt.clickComponentQuery('button', function () {})\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : String<div class='sub-desc'><p>The selector to perform a component query with</p>\n</div></li><li><span class='pre'>root</span> : Ext.Container<div class='sub-desc'><p>The optional root container to start a query from.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call, after clicking all the found components</p>\n</div></li></ul></div></div></div><div id='method-compareObjects' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-compareObjects' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-compareObjects' class='name expandable'>compareObjects</a>( <span class='pre'>Object obj1, Object obj2, Boolean strict</span> ) : Boolean</div><div class='description'><div class='short'>This method performs a deep comparison of the passed JSON objects. ...</div><div class='long'><p>This method performs a deep comparison of the passed JSON objects. Objects must not contain cyclic references.\nYou can use this method in your own assertions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj1</span> : Object<div class='sub-desc'><p>The 1st object to compare</p>\n</div></li><li><span class='pre'>obj2</span> : Object<div class='sub-desc'><p>The 2nd object to compare</p>\n</div></li><li><span class='pre'>strict</span> : Boolean<div class='sub-desc'><p>When passed the <code>true</code> value, the comparison of the primitive values will be performed with the\n<code>===</code> operator (so [ 1 ] and [ \"1\" ] object will be different).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if the passed objects are equal</p>\n</div></li></ul></div></div></div><div id='method-diag' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-diag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-diag' class='name expandable'>diag</a>( <span class='pre'>String desc</span> )</div><div class='description'><div class='short'>This method output the diagnostic message. ...</div><div class='long'><p>This method output the diagnostic message.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The text of diagnostic message</p>\n</div></li></ul></div></div></div><div id='method-done' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-done' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-done' class='name expandable'>done</a>( <span class='pre'>Number delay</span> )</div><div class='description'><div class='short'>This method indicates that test has completed at the expected point and no more assertions are planned. ...</div><div class='long'><p>This method indicates that test has completed at the expected point and no more assertions are planned. Adding assertions after the call to <code>done</code>\nwill add a failing assertion \"Adding assertion after test completion\".</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delay</span> : Number<div class='sub-desc'><p>Optional. When provided, the test will not complete right away, but will wait for <code>delay</code> milliseconds for additional assertions.</p>\n</div></li></ul></div></div></div><div id='method-doubleClick' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-method-doubleClick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-method-doubleClick' class='name expandable'>doubleClick</a>( <span class='pre'>[HTMLElement/Array el], [Function callback], [Object scope]</span> )</div><div class='description'><div class='short'>This method will simulate a mouse double click in the center of the specified DOM/Ext element. ...</div><div class='long'><p>This method will simulate a mouse double click in the center of the specified DOM/Ext element.</p>\n\n<p>Note, that it will first calculate the centeral point of the specified element and then\nwill pick the top-most DOM element from that point. For example, if you will provide a grid row as the <code>el</code>,\nthen click will happen on top of the central cell, and then will bubble to the row itself.\nIn most cases this is the desired behavior.</p>\n\n<p>The following events will be fired, in order:  <code>mouseover</code>, <code>mousedown</code>, <code>mouseup</code>, <code>click</code>, <code>mousedown</code>, <code>mouseup</code>, <code>click</code>, <code>dblclick</code></p>\n\n<p>Example:</p>\n\n<pre><code> t.click(t.getFirstRow(grid), function () { ... })\n</code></pre>\n\n<p>The 1st argument for this method can be omitted. In this case, Siesta will use the current cursor position:</p>\n\n<pre><code> t.click(function () { ... })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement/Array (optional)<div class='sub-desc'><p>el The element to click, or the array with XY coordinates</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call when the condition has been met.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul></div></div></div><div id='method-drag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-drag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-drag' class='name expandable'>drag</a>( <span class='pre'>Ext.Component/HTMLElement/Array source, [Ext.Component/HTMLElement/Array arget], [Array delta], [Function callback], [Object scope], Object options</span> )</div><div class='description'><div class='short'>This method will simulate a drag and drop operation between either two points, two DOM elements or two Ext.Components. ...</div><div class='long'><p>This method will simulate a drag and drop operation between either two points, two DOM elements or two <code>Ext.Component</code>s.\nThe following events will be fired, in order:  <code>mouseover</code>, <code>mousedown</code>, <code>mousemove</code> (along the mouse path), <code>mouseup</code></p>\n\n<p>This method is deprecated in favor of <a href=\"#!/api/Siesta.Test.ExtJS-method-dragTo\" rel=\"Siesta.Test.ExtJS-method-dragTo\" class=\"docClass\">dragTo</a> and <a href=\"#!/api/Siesta.Test.ExtJS-method-dragBy\" rel=\"Siesta.Test.ExtJS-method-dragBy\" class=\"docClass\">dragBy</a> methods</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Ext.Component/HTMLElement/Array<div class='sub-desc'><p>Either an element, or [x,y] as the drag starting point</p>\n</div></li><li><span class='pre'>arget</span> : Ext.Component/HTMLElement/Array (optional)<div class='sub-desc'><p>Either an element, or [x,y] as the drag end point</p>\n</div></li><li><span class='pre'>delta</span> : Array (optional)<div class='sub-desc'><p>the amount to drag from the source coordinate, expressed as [x,y]. [50, 10] will drag 50px to the right and 10px down.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the drag operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Siesta.Test.Simulate.Mouse-method-drag' rel='Siesta.Test.Simulate.Mouse-method-drag' class='docClass'>Siesta.Test.Simulate.Mouse.drag</a></p></div></div></div><div id='method-dragBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-dragBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-dragBy' class='name expandable'>dragBy</a>( <span class='pre'>Ext.Component/HTMLElement/Array source, Array delta, [Function callback], [Object scope], Object options, Boolean dragOnly</span> )</div><div class='description'><div class='short'>This method will simulate a drag and drop operation from a point (or DOM element) and move by a delta. ...</div><div class='long'><p>This method will simulate a drag and drop operation from a point (or DOM element) and move by a delta.\nThe following events will be fired, in order:  <code>mouseover</code>, <code>mousedown</code>, <code>mousemove</code> (along the mouse path), <code>mouseup</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Ext.Component/HTMLElement/Array<div class='sub-desc'><p>Either an element, or [x,y] as the drag starting point</p>\n</div></li><li><span class='pre'>delta</span> : Array<div class='sub-desc'><p>The amount to drag from the source coordinate, expressed as [x,y]. E.g. [50, 10] will drag 50px to the right and 10px down.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the drag operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li><li><span class='pre'>dragOnly</span> : Boolean<div class='sub-desc'><p>true to skip the mouseup and not finish the drop operation.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Siesta.Test.Simulate.Mouse-method-dragBy' rel='Siesta.Test.Simulate.Mouse-method-dragBy' class='docClass'>Siesta.Test.Simulate.Mouse.dragBy</a></p></div></div></div><div id='method-dragTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-dragTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-dragTo' class='name expandable'>dragTo</a>( <span class='pre'>Ext.Component/HTMLElement/Array source, Ext.Component/HTMLElement/Array target, [Function callback], [Object scope], Object options, Boolean dragOnly</span> )</div><div class='description'><div class='short'>This method will simulate a drag and drop operation between either two points or two DOM elements. ...</div><div class='long'><p>This method will simulate a drag and drop operation between either two points or two DOM elements.\nThe following events will be fired, in order:  <code>mouseover</code>, <code>mousedown</code>, <code>mousemove</code> (along the mouse path), <code>mouseup</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Ext.Component/HTMLElement/Array<div class='sub-desc'><p>Either an element, or [x,y] as the drag starting point</p>\n</div></li><li><span class='pre'>target</span> : Ext.Component/HTMLElement/Array<div class='sub-desc'><p>Either an element, or [x,y] as the drag end point</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the drag operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li><li><span class='pre'>dragOnly</span> : Boolean<div class='sub-desc'><p>true to skip the mouseup and not finish the drop operation.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Siesta.Test.Simulate.Mouse-method-dragTo' rel='Siesta.Test.Simulate.Mouse-method-dragTo' class='docClass'>Siesta.Test.Simulate.Mouse.dragTo</a></p></div></div></div><div id='method-elementFromPoint' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Browser' rel='Siesta.Test.Browser' class='defined-in docClass'>Siesta.Test.Browser</a><br/><a href='source/Browser3.html#Siesta-Test-Browser-method-elementFromPoint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Browser-method-elementFromPoint' class='name expandable'>elementFromPoint</a>( <span class='pre'>Number x, Number y</span> ) : HTMLElement</div><div class='description'><div class='short'>This method will return the top-most DOM element at the specified coordinates from the test page. ...</div><div class='long'><p>This method will return the top-most DOM element at the specified coordinates from the test page.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>The X coordinate</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>The Y coordinate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'><p>The top-most element at the specified position on the test page</p>\n</div></li></ul></div></div></div><div id='method-endAsync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-endAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-endAsync' class='name expandable'>endAsync</a>( <span class='pre'>Object frame</span> )</div><div class='description'><div class='short'>This method finalize the \"asynchronous frame\" started with beginAsync. ...</div><div class='long'><p>This method finalize the \"asynchronous frame\" started with <a href=\"#!/api/Siesta.Test-method-beginAsync\" rel=\"Siesta.Test-method-beginAsync\" class=\"docClass\">beginAsync</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frame</span> : Object<div class='sub-desc'><p>The frame to finalize (returned by <a href=\"#!/api/Siesta.Test-method-beginAsync\" rel=\"Siesta.Test-method-beginAsync\" class=\"docClass\">beginAsync</a> method</p>\n</div></li></ul></div></div></div><div id='method-endWait' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-endWait' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-endWait' class='name expandable'>endWait</a>( <span class='pre'>String title</span> )</div><div class='description'><div class='short'>This method finalize the \"asynchronous frame\" started with wait. ...</div><div class='long'><p>This method finalize the \"asynchronous frame\" started with <a href=\"#!/api/Siesta.Test-method-wait\" rel=\"Siesta.Test-method-wait\" class=\"docClass\">wait</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>title</span> : String<div class='sub-desc'><p>The id of frame to finalize, which was previously passed to <a href=\"#!/api/Siesta.Test-method-wait\" rel=\"Siesta.Test-method-wait\" class=\"docClass\">wait</a> method</p>\n</div></li></ul></div></div></div><div id='method-expectGlobals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-expectGlobals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-expectGlobals' class='name expandable'>expectGlobals</a>( <span class='pre'>String name1, String name2, String nameN</span> )</div><div class='description'><div class='short'>This method accepts a variable number of names of expected properties in the global scope. ...</div><div class='long'><p>This method accepts a variable number of names of expected properties in the global scope. When verifying the globals with <a href=\"#!/api/Siesta.Test.More-method-verifyGlobals\" rel=\"Siesta.Test.More-method-verifyGlobals\" class=\"docClass\">verifyGlobals</a>\nassertions, the expected gloabls will not be counted as failed assertions.</p>\n\n<p>This method has a synonym with singular name: <code>expectGlobal</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name1</span> : String<div class='sub-desc'><p>The name of global property</p>\n</div></li><li><span class='pre'>name2</span> : String<div class='sub-desc'><p>The name of global property</p>\n</div></li><li><span class='pre'>nameN</span> : String<div class='sub-desc'><p>The name of global property</p>\n</div></li></ul></div></div></div><div id='method-fail' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-fail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-fail' class='name expandable'>fail</a>( <span class='pre'>String desc, String/Object annotation</span> )</div><div class='description'><div class='short'>This method add the failed assertion to this test. ...</div><div class='long'><p>This method add the failed assertion to this test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li><li><span class='pre'>annotation</span> : String/Object<div class='sub-desc'><p>The additional description how exactly this assertion fails. Will be shown with monospace font.</p>\n\n<p>Can be either string or an object with the following properties. In the latter case a string will be constructed from the properties of the object.</p>\n\n<ul>\n<li><code>assertionName</code> - the name of assertion, will be shown in the 1st line, along with originating source line (in FF and Chrome only)</li>\n<li><code>got</code> - an arbitrary JavaScript object, when provided will be shown on the next line</li>\n<li><code>need</code> - an arbitrary JavaScript object, when provided will be shown on the next line</li>\n<li><code>gotDesc</code> - a prompt for \"got\", default value is \"Got\", but can be for example: \"We have\"</li>\n<li><code>needDesc</code> - a prompt for \"need\", default value is \"Need\", but can be for example: \"We need\"</li>\n<li><code>annotation</code> - A text to append on the last line, can contain some additional explanations</li>\n</ul>\n\n\n<p> The \"got\" and \"need\" values will be stringified to the \"not quite JSON\" notation. Notably the points of circular references will be\n marked with <code>[Circular]</code> marks and the values at 4th (and following) level of depth will be marked with triple points: <code>[ [ [ ... ] ] ]</code></p>\n</div></li></ul></div></div></div><div id='method-firesAtLeastNTimes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Observable' rel='Siesta.Test.ExtJS.Observable' class='defined-in docClass'>Siesta.Test.ExtJS.Observable</a><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-firesAtLeastNTimes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-firesAtLeastNTimes' class='name expandable'>firesAtLeastNTimes</a>( <span class='pre'>Ext.util.Observable observable, String event, Number n, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the observable does not fire the specified event through the duration of the entire test. ...</div><div class='long'><p>This assertion passes if the observable does not fire the specified event through the duration of the entire test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable instance</p>\n</div></li><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of event</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The minimum number of events to be fired</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-firesOk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Observable' rel='Siesta.Test.ExtJS.Observable' class='defined-in docClass'>Siesta.Test.ExtJS.Observable</a><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-firesOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-firesOk' class='name expandable'>firesOk</a>( <span class='pre'>Ext.util.Observable observable, String event, Number n, Number timeOut, Function func, String desc, Function callback</span> )</div><div class='description'><div class='short'>This assertion can be expressed as the following statement: When calling the passed\nfunction func, the passed observa...</div><div class='long'><p>This assertion can be expressed as the following statement: When calling the passed\nfunction <code>func</code>, the passed <code>observable</code> will fire the <code>event</code> <code>n</code> times, during the\nfollowing <code>timeOut</code> milliseconds.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable instance</p>\n</div></li><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of event</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The expected number of events</p>\n</div></li><li><span class='pre'>timeOut</span> : Number<div class='sub-desc'><p>The number of milliseconds to wait for events to be fired</p>\n</div></li><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>The function which should fire the events to detect</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Optional. A callback to call after the assertion was checked.</p>\n</div></li></ul></div></div></div><div id='method-getCell' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Grid' rel='Siesta.Test.ExtJS.Grid' class='defined-in docClass'>Siesta.Test.ExtJS.Grid</a><br/><a href='source/Grid.html#Siesta-Test-ExtJS-Grid-method-getCell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Grid-method-getCell' class='name expandable'>getCell</a>( <span class='pre'>Ext.panel.Table panel, Int row, Int column</span> ) : HTMLElement</div><div class='description'><div class='short'>Utility method which returns the cell at the supplied row and col position. ...</div><div class='long'><p>Utility method which returns the cell at the supplied row and col position.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>panel</span> : Ext.panel.Table<div class='sub-desc'><p>The panel</p>\n</div></li><li><span class='pre'>row</span> : Int<div class='sub-desc'><p>The row index</p>\n</div></li><li><span class='pre'>column</span> : Int<div class='sub-desc'><p>The column index</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'><p>The element of the grid cell at specified position.</p>\n</div></li></ul></div></div></div><div id='method-getExt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-getExt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-getExt' class='name expandable'>getExt</a>( <span class='pre'></span> ) : Object</div><div class='description'><div class='short'>This method returns the Ext object from the scope of the test. ...</div><div class='long'><p>This method returns the <code>Ext</code> object from the scope of the test. When creating your own assertions for Ext JS code, you need\nto make sure you are using this method to get the <code>Ext</code> instance. Otherwise, you'll be using the same \"top-level\" <code>Ext</code>\ninstance, used by the harness for its UI.</p>\n\n<p>For example:</p>\n\n<pre><code> elementHasProvidedCssClass : function (el, cls, desc) {\n     var Ext     = this.getExt();\n\n     if (Ext.fly(el).hasCls(cls)) {\n         this.pass(desc);\n     } else {\n         this.fail(desc);\n     }\n }\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The <code>Ext</code> object from the scope of test</p>\n</div></li></ul></div></div></div><div id='method-getFirstCell' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Grid' rel='Siesta.Test.ExtJS.Grid' class='defined-in docClass'>Siesta.Test.ExtJS.Grid</a><br/><a href='source/Grid.html#Siesta-Test-ExtJS-Grid-method-getFirstCell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Grid-method-getFirstCell' class='name expandable'>getFirstCell</a>( <span class='pre'>Ext.panel.Table panel</span> ) : HTMLElement</div><div class='description'><div class='short'>Utility method which returns the first grid cell element. ...</div><div class='long'><p>Utility method which returns the first grid cell element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>panel</span> : Ext.panel.Table<div class='sub-desc'><p>The panel</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'><p>The element of first cell of grid.</p>\n</div></li></ul></div></div></div><div id='method-getFirstItem' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.DataView' rel='Siesta.Test.ExtJS.DataView' class='defined-in docClass'>Siesta.Test.ExtJS.DataView</a><br/><a href='source/DataView.html#Siesta-Test-ExtJS-DataView-method-getFirstItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.DataView-method-getFirstItem' class='name expandable'>getFirstItem</a>( <span class='pre'>Ext.panel.Table panel</span> ) : Ext.Element</div><div class='description'><div class='short'>Utility method which returns the first view element. ...</div><div class='long'><p>Utility method which returns the first view element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>panel</span> : Ext.panel.Table<div class='sub-desc'><p>The panel</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.Element</span><div class='sub-desc'><p>The first element of the view</p>\n</div></li></ul></div></div></div><div id='method-getFirstRow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Grid' rel='Siesta.Test.ExtJS.Grid' class='defined-in docClass'>Siesta.Test.ExtJS.Grid</a><br/><a href='source/Grid.html#Siesta-Test-ExtJS-Grid-method-getFirstRow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Grid-method-getFirstRow' class='name expandable'>getFirstRow</a>( <span class='pre'>Ext.panel.Table panel</span> ) : Ext.Element</div><div class='description'><div class='short'>Utility method which returns the first grid row element. ...</div><div class='long'><p>Utility method which returns the first grid row element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>panel</span> : Ext.panel.Table<div class='sub-desc'><p>The panel</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.Element</span><div class='sub-desc'><p>The element of first row of grid.</p>\n</div></li></ul></div></div></div><div id='method-getLastCellInRow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Grid' rel='Siesta.Test.ExtJS.Grid' class='defined-in docClass'>Siesta.Test.ExtJS.Grid</a><br/><a href='source/Grid.html#Siesta-Test-ExtJS-Grid-method-getLastCellInRow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Grid-method-getLastCellInRow' class='name expandable'>getLastCellInRow</a>( <span class='pre'>Ext.panel.Table panel, Int row</span> ) : HTMLElement</div><div class='description'><div class='short'>Utility method which returns the last cell for the supplied row. ...</div><div class='long'><p>Utility method which returns the last cell for the supplied row.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>panel</span> : Ext.panel.Table<div class='sub-desc'><p>The panel</p>\n</div></li><li><span class='pre'>row</span> : Int<div class='sub-desc'><p>The row index</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'><p>The element of the grid cell at specified position.</p>\n</div></li></ul></div></div></div><div id='method-getRow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Grid' rel='Siesta.Test.ExtJS.Grid' class='defined-in docClass'>Siesta.Test.ExtJS.Grid</a><br/><a href='source/Grid.html#Siesta-Test-ExtJS-Grid-method-getRow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Grid-method-getRow' class='name expandable'>getRow</a>( <span class='pre'>Ext.panel.Table panel, Int index</span> )</div><div class='description'><div class='short'>Utility method which returns a grid row element. ...</div><div class='long'><p>Utility method which returns a grid row element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>panel</span> : Ext.panel.Table<div class='sub-desc'><p>The panel</p>\n</div></li><li><span class='pre'>index</span> : Int<div class='sub-desc'><p>The row index</p>\n</div></li></ul></div></div></div><div id='method-getSelectedText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.TextSelection' rel='Siesta.Test.TextSelection' class='defined-in docClass'>Siesta.Test.TextSelection</a><br/><a href='source/TextSelection.html#Siesta-Test-TextSelection-method-getSelectedText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.TextSelection-method-getSelectedText' class='name expandable'>getSelectedText</a>( <span class='pre'>Ext.Element/HTMLElement The</span> ) : String</div><div class='description'><div class='short'>Utility method which returns the selected text in the passed element or in the document ...</div><div class='long'><p>Utility method which returns the selected text in the passed element or in the document</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>The</span> : Ext.Element/HTMLElement<div class='sub-desc'><p>element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The selected text</p>\n</div></li></ul></div></div></div><div id='method-hasListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Observable' rel='Siesta.Test.ExtJS.Observable' class='defined-in docClass'>Siesta.Test.ExtJS.Observable</a><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'>Ext.util.Observable observable,  eventName</span> )</div><div class='description'><div class='short'>This method checks if the provided observable has a listener for the eventName ...</div><div class='long'><p>This method checks if the provided <code>observable</code> has a listener for the <code>eventName</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'>\n</div></li><li><span class='pre'>eventName</span> : <div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-hasPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-hasPosition' class='name expandable'>hasPosition</a>( <span class='pre'>Ext.Component component, Int x, Int y, String description</span> )</div><div class='description'><div class='short'>This assertion passes when the passed x and y matches the result of component.getPosition() ...</div><div class='long'><p>This assertion passes when the passed x and y matches the result of component.getPosition()</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Ext.Component<div class='sub-desc'><p>The component to query.</p>\n</div></li><li><span class='pre'>x</span> : Int<div class='sub-desc'>\n</div></li><li><span class='pre'>y</span> : Int<div class='sub-desc'>\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasRegion' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Element' rel='Siesta.Test.ExtJS.Element' class='defined-in docClass'>Siesta.Test.ExtJS.Element</a><br/><a href='source/Element2.html#Siesta-Test-ExtJS-Element-method-hasRegion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Element-method-hasRegion' class='name expandable'>hasRegion</a>( <span class='pre'>Ext.Element el, Ext.util.Region region, String description</span> )</div><div class='description'><div class='short'>Passes if the passed element has the expected region. ...</div><div class='long'><p>Passes if the passed element has the expected region.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Ext.Element<div class='sub-desc'><p>The element</p>\n</div></li><li><span class='pre'>region</span> : Ext.util.Region<div class='sub-desc'><p>The region to compare to.</p>\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasSize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-hasSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-hasSize' class='name expandable'>hasSize</a>( <span class='pre'>Ext.Component component, Int width, Int height, String description</span> )</div><div class='description'><div class='short'>This assertion passes when the passed width and height matches the result of component.getSize() ...</div><div class='long'><p>This assertion passes when the passed width and height matches the result of component.getSize()</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Ext.Component<div class='sub-desc'><p>The component to query.</p>\n</div></li><li><span class='pre'>width</span> : Int<div class='sub-desc'>\n</div></li><li><span class='pre'>height</span> : Int<div class='sub-desc'>\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-hasValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.FormField' rel='Siesta.Test.ExtJS.FormField' class='defined-in docClass'>Siesta.Test.ExtJS.FormField</a><br/><a href='source/FormField.html#Siesta-Test-ExtJS-FormField-method-hasValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.FormField-method-hasValue' class='name expandable'>hasValue</a>( <span class='pre'>Ext.Element field, Ext.util.Region region, String description</span> )</div><div class='description'><div class='short'>Passes if the passed Field has the expected value. ...</div><div class='long'><p>Passes if the passed Field has the expected value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Ext.Element<div class='sub-desc'><p>The field</p>\n</div></li><li><span class='pre'>region</span> : Ext.util.Region<div class='sub-desc'><p>The region to compare to.</p>\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-is' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-is' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-is' class='name expandable'>is</a>( <span class='pre'>Mixed got, Mixed expected, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with == operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>==</code> operator returns true and fails otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isApprox' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isApprox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isApprox' class='name expandable'>isApprox</a>( <span class='pre'>Number value1, Number value2, Number threshHold, String desc</span> )</div><div class='description'><div class='short'>This assertion suppose to compare the numeric values. ...</div><div class='long'><p>This assertion suppose to compare the numeric values. It passes when the passed values are approximately the same (the difference\nis withing a threshold). A threshold can be provided explicitly (when assertion is called with 4 arguments),\nor it will be set to 5% from the 1st value (when calling assertion with 3 arguments).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>threshHold</span> : Number<div class='sub-desc'><p>The maximum allowed difference between values. This argument can be omited.</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isCalled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-isCalled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-isCalled' class='name expandable'>isCalled</a>( <span class='pre'>Function/String fn, Object host, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the function is called at least one time during the test life span. ...</div><div class='long'><p>This assertion passes if the function is called at least one time during the test life span.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the function on the host object (2nd argument)</p>\n</div></li><li><span class='pre'>host</span> : Object<div class='sub-desc'><p>The \"owner\" of the method</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-isCalledNTimes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-isCalledNTimes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-isCalledNTimes' class='name expandable'>isCalledNTimes</a>( <span class='pre'>Function/String fn, Object host, Number n, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the function is called exactly (n) times during the test life span. ...</div><div class='long'><p>This assertion passes if the function is called exactly (n) times during the test life span.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the function on the host object (2nd argument)</p>\n</div></li><li><span class='pre'>host</span> : Object<div class='sub-desc'><p>The \"owner\" of the method</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The expected number of calls</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-isDateEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Date' rel='Siesta.Test.Date' class='defined-in docClass'>Siesta.Test.Date</a><br/><a href='source/Date.html#Siesta-Test-Date-method-isDateEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Date-method-isDateEqual' class='name expandable'>isDateEqual</a>( <span class='pre'>Date got, Date expectedDate, String description</span> )</div><div class='description'><div class='short'>This assertion passes when the 2 provided dates are equal and fails otherwise. ...</div><div class='long'><p>This assertion passes when the 2 provided dates are equal and fails otherwise.</p>\n\n<p>It has a synonym: <code>isDateEq</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Date<div class='sub-desc'><p>The 1st date to compare</p>\n</div></li><li><span class='pre'>expectedDate</span> : Date<div class='sub-desc'><p>The 2nd date to compare</p>\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isDeeply' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isDeeply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isDeeply' class='name expandable'>isDeeply</a>( <span class='pre'>Object obj1, Object obj2, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when in-depth comparison of 1st and 2nd arguments (which are assumed to be JSON objects) shows ...</div><div class='long'><p>This assertion passes when in-depth comparison of 1st and 2nd arguments (which are assumed to be JSON objects) shows that they are equal.\nComparison is performed with '==' operator, so <code>[ 1 ]</code> and `[ \"1\" ] objects will be equal. The objects should not contain cyclic references.</p>\n\n<p>This method has a synonym: <code>is_deeply</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj1</span> : Object<div class='sub-desc'><p>The 1st object to compare</p>\n</div></li><li><span class='pre'>obj2</span> : Object<div class='sub-desc'><p>The 2nd object to compare</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isDeeplyStrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isDeeplyStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isDeeplyStrict' class='name expandable'>isDeeplyStrict</a>( <span class='pre'>Object obj1, Object obj2, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when in-depth comparison of 1st and 2nd arguments (which are assumed to be JSON objects) shows ...</div><div class='long'><p>This assertion passes when in-depth comparison of 1st and 2nd arguments (which are assumed to be JSON objects) shows that they are equal.\nComparison is performed with '===' operator, so <code>[ 1 ]</code> and `[ \"1\" ] objects will be different. The objects should not contain cyclic references.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj1</span> : Object<div class='sub-desc'><p>The 1st object to compare</p>\n</div></li><li><span class='pre'>obj2</span> : Object<div class='sub-desc'><p>The 2nd object to compare</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isGreater' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isGreater' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isGreater' class='name expandable'>isGreater</a>( <span class='pre'>Number value1, Number value2, String desc</span> )</div><div class='description'><div class='short'>This assertion passes, when the comparison of 1st with 2nd, using &gt; operator will return true and fails otherwise. ...</div><div class='long'><p>This assertion passes, when the comparison of 1st with 2nd, using <code>&gt;</code> operator will return <code>true</code> and fails otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isGreaterOrEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isGreaterOrEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isGreaterOrEqual' class='name expandable'>isGreaterOrEqual</a>( <span class='pre'>Number value1, Number value2, String desc</span> )</div><div class='description'><div class='short'>This assertion passes, when the comparison of 1st with 2nd, using &gt;= operator will return true and fails otherwise. ...</div><div class='long'><p>This assertion passes, when the comparison of 1st with 2nd, using <code>&gt;=</code> operator will return <code>true</code> and fails otherwise.</p>\n\n<p>It has a synonym - <code>isGE</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isLess' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isLess' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isLess' class='name expandable'>isLess</a>( <span class='pre'>Number value1, Number value2, String desc</span> )</div><div class='description'><div class='short'>This assertion passes, when the comparison of 1st with 2nd, using &lt; operator will return true and fails otherwise. ...</div><div class='long'><p>This assertion passes, when the comparison of 1st with 2nd, using <code>&lt;</code> operator will return <code>true</code> and fails otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isLessOrEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isLessOrEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isLessOrEqual' class='name expandable'>isLessOrEqual</a>( <span class='pre'>Number value1, Number value2, String desc</span> )</div><div class='description'><div class='short'>This assertion passes, when the comparison of 1st with 2nd, using &lt;= operator will return true and fails otherwise. ...</div><div class='long'><p>This assertion passes, when the comparison of 1st with 2nd, using <code>&lt;=</code> operator will return <code>true</code> and fails otherwise.</p>\n\n<p>It has a synonym - <code>isLE</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : Number<div class='sub-desc'><p>The 1st value to compare</p>\n</div></li><li><span class='pre'>value2</span> : Number<div class='sub-desc'><p>The 2nd value to compare</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isNot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-isNot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-isNot' class='name expandable'>isNot</a>( <span class='pre'>Mixed got, Mixed expected, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with != operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>!=</code> operator returns true and fails otherwise.\nIt has synonyms - <code>isnot</code> and <code>isnt</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isNotStrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-isNotStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-isNotStrict' class='name expandable'>isNotStrict</a>( <span class='pre'>Mixed got, Mixed expected, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with !== operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>!==</code> operator returns true and fails otherwise.\nIt has synonyms - <code>isntStrict</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isStrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-isStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-isStrict' class='name expandable'>isStrict</a>( <span class='pre'>Mixed got, Mixed expected, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when the comparison of 1st and 2nd arguments with === operator returns true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the comparison of 1st and 2nd arguments with <code>===</code> operator returns true and fails otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Mixed<div class='sub-desc'><p>The value \"we have\" - will be shown as \"Got:\" in case of failure</p>\n</div></li><li><span class='pre'>expected</span> : Mixed<div class='sub-desc'><p>The value \"we expect\" - will be shown as \"Need:\" in case of failure</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isaOk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-isaOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-isaOk' class='name expandable'>isaOk</a>( <span class='pre'>Mixed value, Class/String className, String desc</span> )</div><div class='description'><div class='short'>This assertion passes, when the supplied value is the instance of the className. ...</div><div class='long'><p>This assertion passes, when the supplied <code>value</code> is the instance of the <code>className</code>. The check is performed with\n<code>instanceof</code> operator. The <code>className</code> parameter can be supplied as class constructor or as string, representing the class\nname. In the latter case the <code>class</code> will eval'ed to receive the class constructor.</p>\n\n<p>This method has a synonym: isa_ok</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to check for 'isa' relationship</p>\n</div></li><li><span class='pre'>className</span> : Class/String<div class='sub-desc'><p>The class to check for 'isa' relationship with <code>value</code></p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-isntCalled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Function' rel='Siesta.Test.Function' class='defined-in docClass'>Siesta.Test.Function</a><br/><a href='source/Function.html#Siesta-Test-Function-method-isntCalled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Function-method-isntCalled' class='name expandable'>isntCalled</a>( <span class='pre'>Function/String fn, Object host, Number n, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the function is not called during the test life span. ...</div><div class='long'><p>This assertion passes if the function is not called during the test life span.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function/String<div class='sub-desc'><p>The function itself or the name of the function on the host object (2nd argument)</p>\n</div></li><li><span class='pre'>host</span> : Object<div class='sub-desc'><p>The \"owner\" of the method</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The expected number of calls</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-keyPress' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Keyboard' rel='Siesta.Test.Simulate.Keyboard' class='defined-in docClass'>Siesta.Test.Simulate.Keyboard</a><br/><a href='source/Keyboard.html#Siesta-Test-Simulate-Keyboard-method-keyPress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Keyboard-method-keyPress' class='name expandable'>keyPress</a>( <span class='pre'>HTMLElement el, String key, Object options</span> )</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement<div class='sub-desc'>\n</div></li><li><span class='pre'>key</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n\n<p>This method will simluate the key press, translated to the specified DOM element.\nThe following events will be fired, in order: <code>keydown</code>, <code>keypress</code>, <code>textInput</code>(webkit only currently), <code>keyup</code></p>\n</div></li></ul></div></div></div><div id='method-knownBugIn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-knownBugIn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-knownBugIn' class='name expandable'>knownBugIn</a>( <span class='pre'>String frameworkVersion, Function fn, String reason</span> )</div><div class='description'><div class='short'>This method allow assertions to fail silently for tests executed in versions of Ext JS up to a certain release. ...</div><div class='long'><p>This method allow assertions to fail silently for tests executed in versions of Ext JS up to a certain release. When you try to run this test on a newer\nversion of Ext JS and it fails, it will fail properly and force you to re-investigate. If it passes in the newer version, you should remove the\nuse of this method.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Test-method-todo\" rel=\"Siesta.Test-method-todo\" class=\"docClass\">Siesta.Test.todo</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameworkVersion</span> : String<div class='sub-desc'><p>The Ext JS framework version, e.g. '4.0.7'</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The method covering the broken functionality</p>\n</div></li><li><span class='pre'>reason</span> : String<div class='sub-desc'><p>The reason or explanation of the bug</p>\n</div></li></ul></div></div></div><div id='method-like' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-like' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-like' class='name expandable'>like</a>( <span class='pre'>String string, String/RegExp regex, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when the passed string matches to a regular expression regex. ...</div><div class='long'><p>This assertion passes when the passed <code>string</code> matches to a regular expression <code>regex</code>. When <code>regex</code> is a string,\nassertion will check that it is a substring of <code>string</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>string</span> : String<div class='sub-desc'><p>The string to check for \"likeness\"</p>\n</div></li><li><span class='pre'>regex</span> : String/RegExp<div class='sub-desc'><p>The regex against which to test the string, can be also a plain string</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-livesOk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-livesOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-livesOk' class='name expandable'>livesOk</a>( <span class='pre'>Function func, String desc</span> )</div><div class='description'><div class='short'>This assertion passes, when the supplied func function doesn't throw the exception during execution. ...</div><div class='long'><p>This assertion passes, when the supplied <code>func</code> function doesn't throw the exception during execution.</p>\n\n<p>This method has a synonyms: <code>lives_ok</code> and <code>lives</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>The function which supposed to not throw an exception</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-loadStoresAndThen' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Store' rel='Siesta.Test.ExtJS.Store' class='defined-in docClass'>Siesta.Test.ExtJS.Store</a><br/><a href='source/Store.html#Siesta-Test-ExtJS-Store-method-loadStoresAndThen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Store-method-loadStoresAndThen' class='name expandable'>loadStoresAndThen</a>( <span class='pre'>Ext.data.AbstractStore store1, Ext.data.AbstractStore store2, Ext.data.AbstractStore storeN, Function callback</span> )</div><div class='description'><div class='short'>This method is a wrapper around waitForStoresToLoad method - it waits for the provided stores to fire the \"load\" event. ...</div><div class='long'><p>This method is a wrapper around <a href=\"#!/api/Siesta.Test.ExtJS.Store-method-waitForStoresToLoad\" rel=\"Siesta.Test.ExtJS.Store-method-waitForStoresToLoad\" class=\"docClass\">waitForStoresToLoad</a> method - it waits for the provided stores to fire the \"load\" event.\nIn addition to <a href=\"#!/api/Siesta.Test.ExtJS.Store-method-waitForStoresToLoad\" rel=\"Siesta.Test.ExtJS.Store-method-waitForStoresToLoad\" class=\"docClass\">waitForStoresToLoad</a> this method also calls the <code>load</code> method of each passed store.</p>\n\n<p>This method accepts either variable number of arguments:</p>\n\n<pre><code> t.loadStoresAndThen(store1, store2, function () { ... })\n</code></pre>\n\n<p>or array of stores:</p>\n\n<pre><code> t.loadStoresAndThen([ store1, store2 ], function () { ... })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store1</span> : Ext.data.AbstractStore<div class='sub-desc'><p>The store to load.</p>\n</div></li><li><span class='pre'>store2</span> : Ext.data.AbstractStore<div class='sub-desc'><p>The store to load.</p>\n</div></li><li><span class='pre'>storeN</span> : Ext.data.AbstractStore<div class='sub-desc'><p>The store to load.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met.</p>\n</div></li></ul></div></div></div><div id='method-matchGridCellContent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Grid' rel='Siesta.Test.ExtJS.Grid' class='defined-in docClass'>Siesta.Test.ExtJS.Grid</a><br/><a href='source/Grid.html#Siesta-Test-ExtJS-Grid-method-matchGridCellContent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Grid-method-matchGridCellContent' class='name expandable'>matchGridCellContent</a>( <span class='pre'>Ext.panel.Table panel, Int row, Int column, String/RegExp string, Description description</span> )</div><div class='description'><div class='short'>This assertion passes if the passed string is found in the passed grid's cell element. ...</div><div class='long'><p>This assertion passes if the passed string is found in the passed grid's cell element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>panel</span> : Ext.panel.Table<div class='sub-desc'><p>The panel to query</p>\n</div></li><li><span class='pre'>row</span> : Int<div class='sub-desc'><p>The row index</p>\n</div></li><li><span class='pre'>column</span> : Int<div class='sub-desc'><p>The column index</p>\n</div></li><li><span class='pre'>string</span> : String/RegExp<div class='sub-desc'><p>The string to find or RegExp to match</p>\n</div></li><li><span class='pre'>description</span> : Description<div class='sub-desc'><p>The description for the assertion</p>\n</div></li></ul></div></div></div><div id='method-mouseDown' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-method-mouseDown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-method-mouseDown' class='name expandable'>mouseDown</a>( <span class='pre'>HTMLElement el, Object options</span> )</div><div class='description'><div class='short'>This method will simulate a mousedown event in the center of the specified DOM element. ...</div><div class='long'><p>This method will simulate a mousedown event in the center of the specified DOM element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement<div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li></ul></div></div></div><div id='method-mouseOut' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-method-mouseOut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-method-mouseOut' class='name expandable'>mouseOut</a>( <span class='pre'>HTMLElement el, Object options</span> )</div><div class='description'><div class='short'>This method will simulate a mouseout event in the center of the specified DOM element. ...</div><div class='long'><p>This method will simulate a mouseout event in the center of the specified DOM element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement<div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li></ul></div></div></div><div id='method-mouseOver' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-method-mouseOver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-method-mouseOver' class='name expandable'>mouseOver</a>( <span class='pre'>HTMLElement el, Object options</span> )</div><div class='description'><div class='short'>This method will simulate a mouseover event in the center of the specified DOM element. ...</div><div class='long'><p>This method will simulate a mouseover event in the center of the specified DOM element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement<div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li></ul></div></div></div><div id='method-mouseUp' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-method-mouseUp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-method-mouseUp' class='name expandable'>mouseUp</a>( <span class='pre'>HTMLElement el, Object options</span> )</div><div class='description'><div class='short'>This method will simulate a mousedown event in the center of the specified DOM element. ...</div><div class='long'><p>This method will simulate a mousedown event in the center of the specified DOM element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement<div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>any extra options used to configure the DOM event</p>\n</div></li></ul></div></div></div><div id='method-moveMouseBy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-method-moveMouseBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-method-moveMouseBy' class='name expandable'>moveMouseBy</a>( <span class='pre'>Array delta, [Function callback], [Object scope]</span> )</div><div class='description'><div class='short'>This method will simulate a mouse move by an x a y delta amount ...</div><div class='long'><p>This method will simulate a mouse move by an x a y delta amount</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delta</span> : Array<div class='sub-desc'><p>The delta x and y distance to move, e.g. [20, 20] for 20px down/right, or [0, 10] for just 10px down.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li></ul></div></div></div><div id='method-moveMouseTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-moveMouseTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-moveMouseTo' class='name expandable'>moveMouseTo</a>( <span class='pre'>Ext.Component/HTMLElement/Array target, [Function callback], [Object scope]</span> )</div><div class='description'><div class='short'>This method will simulate a mouse move to an Ext JS component, xy-coordinate or an element (the center of it) ...</div><div class='long'><p>This method will simulate a mouse move to an Ext JS component, xy-coordinate or an element (the center of it)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : Ext.Component/HTMLElement/Array<div class='sub-desc'><p>Either an element, or [x,y] as the target point</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Siesta.Test.Simulate.Mouse-method-moveMouseTo' rel='Siesta.Test.Simulate.Mouse-method-moveMouseTo' class='docClass'>Siesta.Test.Simulate.Mouse.moveMouseTo</a></p></div></div></div><div id='method-notOk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-notOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-notOk' class='name expandable'>notOk</a>( <span class='pre'>Mixed value, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when the supplied value evalutes to false and fails otherwise. ...</div><div class='long'><p>This assertion passes when the supplied <code>value</code> evalutes to <code>false</code> and fails otherwise.</p>\n\n<p>It has a synonym - <code>notok</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value, indicating wheter assertions passes or fails</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-ok' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-ok' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-ok' class='name expandable'>ok</a>( <span class='pre'>Mixed value, String desc</span> )</div><div class='description'><div class='short'>This assertion passes when the supplied value evalutes to true and fails otherwise. ...</div><div class='long'><p>This assertion passes when the supplied <code>value</code> evalutes to <code>true</code> and fails otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value, indicating wheter assertions passes or fails</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-pass' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-pass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-pass' class='name expandable'>pass</a>( <span class='pre'>String desc, String annotation</span> )</div><div class='description'><div class='short'>This method add the passed assertion to this test. ...</div><div class='long'><p>This method add the passed assertion to this test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li><li><span class='pre'>annotation</span> : String<div class='sub-desc'><p>The additional description how exactly this assertion passes. Will be shown with monospace font.</p>\n</div></li></ul></div></div></div><div id='method-requireOk' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-requireOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-requireOk' class='name expandable'>requireOk</a>( <span class='pre'>String className1, String className2, String classNameN, Function fn</span> )</div><div class='description'><div class='short'>This method will load the specified classes with Ext.require() and call the provided callback. ...</div><div class='long'><p>This method will load the specified classes with <code>Ext.require()</code> and call the provided callback. Additionally it will check that all classes have been loaded.</p>\n\n<p>This method accepts either variable number of arguments:</p>\n\n<pre><code> t.requireOk('Some.Class1', 'Some.Class2', function () { ... })\n</code></pre>\n\n<p>or array of class names:</p>\n\n<pre><code> t.requireOk([ 'Some.Class1', 'Some.Class2' ], function () { ... })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className1</span> : String<div class='sub-desc'><p>The name of the class to <code>require</code></p>\n</div></li><li><span class='pre'>className2</span> : String<div class='sub-desc'><p>The name of the class to <code>require</code></p>\n</div></li><li><span class='pre'>classNameN</span> : String<div class='sub-desc'><p>The name of the class to <code>require</code></p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The callback. Will be called even if the loading of some classes have failed.</p>\n</div></li></ul></div></div></div><div id='method-rightClick' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Mouse' rel='Siesta.Test.Simulate.Mouse' class='defined-in docClass'>Siesta.Test.Simulate.Mouse</a><br/><a href='source/Mouse.html#Siesta-Test-Simulate-Mouse-method-rightClick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Mouse-method-rightClick' class='name expandable'>rightClick</a>( <span class='pre'>[HTMLElement/Array el], [Function callback], [Object scope]</span> )</div><div class='description'><div class='short'>This method will simulate a mouse right click in the center of the specified DOM/Ext element. ...</div><div class='long'><p>This method will simulate a mouse right click in the center of the specified DOM/Ext element.</p>\n\n<p>Note, that it will first calculate the centeral point of the specified element and then\nwill pick the top-most DOM element from that point. For example, if you will provide a grid row as the <code>el</code>,\nthen click will happen on top of the central cell, and then will bubble to the row itself.\nIn most cases this is the desired behavior.</p>\n\n<p>The following events will be fired, in order:  <code>mouseover</code>, <code>mousedown</code>, <code>mouseup</code>, <code>contextmenu</code></p>\n\n<p>Example:</p>\n\n<pre><code> t.click(t.getFirstRow(grid), function () { ... })\n</code></pre>\n\n<p>The 1st argument for this method can be omitted. In this case, Siesta will use the current cursor position:</p>\n\n<pre><code> t.click(function () { ... })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement/Array (optional)<div class='sub-desc'><p>el The element to click, or the array with XY coordinates</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>A function to call when the condition has been met.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope for the callback</p>\n</div></li></ul></div></div></div><div id='method-selectText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.TextSelection' rel='Siesta.Test.TextSelection' class='defined-in docClass'>Siesta.Test.TextSelection</a><br/><a href='source/TextSelection.html#Siesta-Test-TextSelection-method-selectText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.TextSelection-method-selectText' class='name expandable'>selectText</a>( <span class='pre'>Ext.Element/HTMLElement The, [Int start], [Int end]</span> )</div><div class='description'><div class='short'>Utility method which selects text in the passed element ...</div><div class='long'><p>Utility method which selects text in the passed element</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>The</span> : Ext.Element/HTMLElement<div class='sub-desc'><p>element</p>\n</div></li><li><span class='pre'>start</span> : Int (optional)<div class='sub-desc'><p>The selection start index</p>\n</div></li><li><span class='pre'>end</span> : Int (optional)<div class='sub-desc'><p>The selection end index</p>\n</div></li></ul></div></div></div><div id='method-simulateEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.Simulate.Event' rel='Siesta.Test.Simulate.Event' class='defined-in docClass'>Siesta.Test.Simulate.Event</a><br/><a href='source/Event.html#Siesta-Test-Simulate-Event-method-simulateEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Simulate.Event-method-simulateEvent' class='name expandable'>simulateEvent</a>( <span class='pre'>HTMLElement el, String type, Object the, Boolean suppressLog</span> )</div><div class='description'><div class='short'>This method will simulate an event triggered by the passed element. ...</div><div class='long'><p>This method will simulate an event triggered by the passed element. If no coordinates are supplied in the options object, the center of the element\nwill be used.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement<div class='sub-desc'>\n</div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type of event (e.g. 'mouseover', 'click', 'keypress')</p>\n</div></li><li><span class='pre'>the</span> : Object<div class='sub-desc'><p>options for the event. See http://developer.mozilla.org/en/DOM/event for reference.</p>\n</div></li><li><span class='pre'>suppressLog</span> : Boolean<div class='sub-desc'><p>true to not include this simulated event in the assertion grid.</p>\n</div></li></ul></div></div></div><div id='method-throwsOk' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-throwsOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-throwsOk' class='name expandable'>throwsOk</a>( <span class='pre'>Function func, String/RegExp expected, String desc</span> )</div><div class='description'><div class='short'>This assertion passes, when the func function throws the exception during executing, and the\nstringified exception pa...</div><div class='long'><p>This assertion passes, when the <code>func</code> function throws the exception during executing, and the\nstringified exception passes the 'like' assertion (with 'expected' parameter).</p>\n\n<p>It has synonyms - <code>throws_ok</code> and <code>throws</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>The function which supposed to throw an exception</p>\n</div></li><li><span class='pre'>expected</span> : String/RegExp<div class='sub-desc'><p>The regex against which to test the stringified exception, can be also a plain string</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-todo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-todo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-todo' class='name expandable'>todo</a>( <span class='pre'>String why, Function code</span> )</div><div class='description'><div class='short'>With this method you can mark a group of assertions as \"todo\", assuming they most probably will fail,\nbut its still w...</div><div class='long'><p>With this method you can mark a group of assertions as \"todo\", assuming they most probably will fail,\nbut its still worth to try run them.\nThe supplied <code>code</code> function will be run, it will receive a new test instance as the 1st argument,\nwhich should be used for assertions checks (and not the primary test instance, received from <code>StartTest</code>).</p>\n\n<p>Assertions, failed inside the <code>code</code> block will be still treated by harness as \"green\".\nAssertions, passed inside the <code>code</code> block will be treated by harness as bonus ones and highlighted.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Test.ExtJS-method-knownBugIn\" rel=\"Siesta.Test.ExtJS-method-knownBugIn\" class=\"docClass\">Siesta.Test.ExtJS.knownBugIn</a> method.</p>\n\n<p>For example:</p>\n\n<pre><code>t.todo('Scheduled for 4.1.x release', function (todo) {\n\n    var treePanel    = new Ext.tree.Panel()\n\n    todo.is(treePanel.getView().store, treePanel.store, 'NodeStore and TreeStore have been merged and there's only 1 store now);\n})\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>why</span> : String<div class='sub-desc'><p>The reason/description for the todo</p>\n</div></li><li><span class='pre'>code</span> : Function<div class='sub-desc'><p>A function, wrapping the \"todo\" assertions. This function will receive a special test class instance\nwhich should be used for assertions checks</p>\n</div></li></ul></div></div></div><div id='method-type' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS'>Siesta.Test.ExtJS</span><br/><a href='source/ExtJS2.html#Siesta-Test-ExtJS-method-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS-method-type' class='name expandable'>type</a>( <span class='pre'>Ext.form.Field/HTMLElement el, String text, [Function callback], [Object scope]</span> )</div><div class='description'><div class='short'>This method wraps the Siesta.Test.Browser.type method with additional check:\nif the 1st passed parameter is an instan...</div><div class='long'><p>This method wraps the <a href=\"#!/api/Siesta.Test.Browser-method-type\" rel=\"Siesta.Test.Browser-method-type\" class=\"docClass\">Siesta.Test.Browser.type</a> method with additional check:\nif the 1st passed parameter is an instance of <code>Ext.form.Field</code>, then the typing will occur\ninto its <code>inputEl</code> property. Please see <a href=\"#!/api/Siesta.Test.Browser-method-type\" rel=\"Siesta.Test.Browser-method-type\" class=\"docClass\">Siesta.Test.Browser.type</a> description\nfor the list of supported advanced key codes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : Ext.form.Field/HTMLElement<div class='sub-desc'><p>The element or Component to type into</p>\n</div></li><li><span class='pre'>text</span> : String<div class='sub-desc'><p>the text to type.</p>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>To run this method async, provide a callback method to be called after the type operation is completed.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>the scope for the callback</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Siesta.Test.Simulate.Keyboard-method-type' rel='Siesta.Test.Simulate.Keyboard-method-type' class='docClass'>Siesta.Test.Simulate.Keyboard.type</a></p></div></div></div><div id='method-typeOf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-typeOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-typeOf' class='name expandable'>typeOf</a>( <span class='pre'>Mixed object</span> ) : String</div><div class='description'><div class='short'>This method returns a result of Object.prototype.toString applied to the passed argument. ...</div><div class='long'><p>This method returns a result of <code>Object.prototype.toString</code> applied to the passed argument. The <code>[object</code> and trailing <code>]</code> are trimmed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Mixed<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The name of the \"type\" for this object.</p>\n</div></li></ul></div></div></div><div id='method-unlike' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-unlike' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-unlike' class='name expandable'>unlike</a>( <span class='pre'>String string, String/RegExp regex, String desc</span> )</div><div class='description'><div class='short'>This method is the opposite of 'like', it adds failed assertion, when the string matches the passed regex. ...</div><div class='long'><p>This method is the opposite of 'like', it adds failed assertion, when the string matches the passed regex.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>string</span> : String<div class='sub-desc'><p>The string to check for \"unlikeness\"</p>\n</div></li><li><span class='pre'>regex</span> : String/RegExp<div class='sub-desc'><p>The regex against which to test the string, can be also a plain string</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div><div id='method-verifyGlobals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-verifyGlobals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-verifyGlobals' class='name expandable'>verifyGlobals</a>( <span class='pre'>String name1, String name2, String nameN</span> )</div><div class='description'><div class='short'>This method accepts a variable number of names of expected properties in the global scope and then performs a globals...</div><div class='long'><p>This method accepts a variable number of names of expected properties in the global scope and then performs a globals check.</p>\n\n<p>It will scan all globals properties in the scope of test and compare them with the list of expected globals. Expected globals can be provided with:\n<a href=\"#!/api/Siesta.Test.More-method-expectGlobals\" rel=\"Siesta.Test.More-method-expectGlobals\" class=\"docClass\">expectGlobals</a> method or <a href=\"#!/api/Siesta.Harness-cfg-expectedGlobals\" rel=\"Siesta.Harness-cfg-expectedGlobals\" class=\"docClass\">expectedGlobals</a> configuration option of harness.</p>\n\n<p>You can enable this assertion to automatically happen at the end of each test, using <a href=\"#!/api/Siesta.Harness-cfg-autoCheckGlobals\" rel=\"Siesta.Harness-cfg-autoCheckGlobals\" class=\"docClass\">autoCheckGlobals</a> option of the harness.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name1</span> : String<div class='sub-desc'><p>The name of global property</p>\n</div></li><li><span class='pre'>name2</span> : String<div class='sub-desc'><p>The name of global property</p>\n</div></li><li><span class='pre'>nameN</span> : String<div class='sub-desc'><p>The name of global property</p>\n</div></li></ul></div></div></div><div id='method-wait' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-method-wait' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-method-wait' class='name expandable'>wait</a>( <span class='pre'>String title, String howLong</span> )</div><div class='description'><div class='short'>This method starts the \"asynchronous frame\". ...</div><div class='long'><p>This method starts the \"asynchronous frame\". The test will wait for all asynchronous frames to complete before it will finalize.\nThe frame can be finished with the <a href=\"#!/api/Siesta.Test-method-endWait\" rel=\"Siesta.Test-method-endWait\" class=\"docClass\">endWait</a> call. Unlike the <a href=\"#!/api/Siesta.Test-method-beginAsync\" rel=\"Siesta.Test-method-beginAsync\" class=\"docClass\">beginAsync</a>, this method requires you to provide\nthe unique id for the asynchronous frame.</p>\n\n<p>For example:</p>\n\n<pre><code> t.wait(\"require\")\n\n Ext.require('Some.Class', function () {\n\n     t.ok(Some.Class, 'Some class was loaded')\n\n     t.endWait(\"require\")\n })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>title</span> : String<div class='sub-desc'><p>The unique id for the asynchronous frame.</p>\n</div></li><li><span class='pre'>howLong</span> : String<div class='sub-desc'><p>The maximum time (in ms) to wait until force the finalization of this async frame. Optional. Default time is 15000 ms.</p>\n</div></li></ul></div></div></div><div id='method-waitFor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.More' rel='Siesta.Test.More' class='defined-in docClass'>Siesta.Test.More</a><br/><a href='source/More.html#Siesta-Test-More-method-waitFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.More-method-waitFor' class='name expandable'>waitFor</a>( <span class='pre'>Function/Number method, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits for passed checker method to return true (or any non-false value, like for example DOM element or array), and c...</div><div class='long'><p>Waits for passed checker method to return true (or any non-false value, like for example DOM element or array), and calls the callback when this happens.\nAs an additional feature, the callback will receive the result from the checker method as the 1st argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>method</span> : Function/Number<div class='sub-desc'><p>Either a function which should return true when a certain condition has been fulfilled, or a number of ms to wait before calling the callback.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met. Will receive a result from checker function.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time (in milliseconds) to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForCQ' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForCQ' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForCQ' class='name expandable'>waitForCQ</a>( <span class='pre'>String query, Ext.Container root, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Shorthand alias for waitForComponentQuery ...</div><div class='long'><p>Shorthand alias for <a href=\"#!/api/Siesta.Test.ExtJS.Component-method-waitForComponentQuery\" rel=\"Siesta.Test.ExtJS.Component-method-waitForComponentQuery\" class=\"docClass\">waitForComponentQuery</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : String<div class='sub-desc'><p>The component query phrase</p>\n</div></li><li><span class='pre'>root</span> : Ext.Container<div class='sub-desc'><p>The container to start a component query from</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the xtype has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForCQNotFound' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForCQNotFound' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForCQNotFound' class='name expandable'>waitForCQNotFound</a>( <span class='pre'>String query, Function callback, Object scope, Number timeout</span> )</div><div class='description'><div class='short'>Alias for waitForComponentQueryNotFound ...</div><div class='long'><p>Alias for <a href=\"#!/api/Siesta.Test.ExtJS.Component-method-waitForComponentQueryNotFound\" rel=\"Siesta.Test.ExtJS.Component-method-waitForComponentQueryNotFound\" class=\"docClass\">waitForComponentQueryNotFound</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-waitForCQVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForCQVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForCQVisible' class='name expandable'>waitForCQVisible</a>( <span class='pre'>String query, Function callback, Object scope, Number timeout</span> )</div><div class='description'><div class='short'>Alias for waitForComponentQueryVisible ...</div><div class='long'><p>Alias for <a href=\"#!/api/Siesta.Test.ExtJS.Component-method-waitForComponentQueryVisible\" rel=\"Siesta.Test.ExtJS.Component-method-waitForComponentQueryVisible\" class=\"docClass\">waitForComponentQueryVisible</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-waitForComponent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForComponent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForComponent' class='name expandable'>waitForComponent</a>( <span class='pre'>String component, Boolean rendered, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits until the a component with the specified xtype can be detected by a simple ComponentQuery. ...</div><div class='long'><p>Waits until the a component with the specified xtype can be detected by a simple ComponentQuery.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : String<div class='sub-desc'><p>The class name to wait for.</p>\n</div></li><li><span class='pre'>rendered</span> : Boolean<div class='sub-desc'><p>true to also wait for the component to be rendered</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the component has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForComponentNotVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForComponentNotVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForComponentNotVisible' class='name expandable'>waitForComponentNotVisible</a>( <span class='pre'>Ext.Component component, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits until the main element of the passed component is not visible. ...</div><div class='long'><p>Waits until the main element of the passed component is not visible. The callback will receive the passed component instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Ext.Component<div class='sub-desc'><p>The component to look for.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the component becomes not visible</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForComponentQuery' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForComponentQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForComponentQuery' class='name expandable'>waitForComponentQuery</a>( <span class='pre'>String query, Ext.Container root, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits until Ext.ComponentQuery detects the passed query parameter. ...</div><div class='long'><p>Waits until Ext.ComponentQuery detects the passed query parameter. The callback will receive the result of the query.</p>\n\n<p>The \"root\" argument of this method can be omitted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : String<div class='sub-desc'><p>The component query phrase</p>\n</div></li><li><span class='pre'>root</span> : Ext.Container<div class='sub-desc'><p>The container to start a component query from. Optional</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the xtype has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForComponentQueryNotFound' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForComponentQueryNotFound' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForComponentQueryNotFound' class='name expandable'>waitForComponentQueryNotFound</a>( <span class='pre'>String query, Ext.Container root, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits until Ext.ComponentQuery from the passed query parameter is no longer found, and then calls the callback supplied. ...</div><div class='long'><p>Waits until Ext.ComponentQuery from the passed query parameter is no longer found, and then calls the callback supplied.</p>\n\n<p>The \"root\" argument of this method can be omitted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : String<div class='sub-desc'><p>The component query selector</p>\n</div></li><li><span class='pre'>root</span> : Ext.Container<div class='sub-desc'><p>The container to start a component query from. Optional</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the xtype has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForComponentQueryVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForComponentQueryVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForComponentQueryVisible' class='name expandable'>waitForComponentQueryVisible</a>( <span class='pre'>String query, Ext.Container root, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits until all results of the Ext.ComponentQuery are detected and visible. ...</div><div class='long'><p>Waits until all results of the Ext.ComponentQuery are detected and visible.</p>\n\n<p>The \"root\" argument of this method can be omitted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : String<div class='sub-desc'><p>The component query selector</p>\n</div></li><li><span class='pre'>root</span> : Ext.Container<div class='sub-desc'><p>The container to start a component query from. Optional</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the xtype has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForComponentVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForComponentVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForComponentVisible' class='name expandable'>waitForComponentVisible</a>( <span class='pre'>Ext.Component component, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits until the main element of the passed component is the 'top' element in the DOM. ...</div><div class='long'><p>Waits until the main element of the passed component is the 'top' element in the DOM. The callback will receive the passed component instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Ext.Component<div class='sub-desc'><p>The component to look for.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the component becomes visible</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Observable' rel='Siesta.Test.ExtJS.Observable' class='defined-in docClass'>Siesta.Test.ExtJS.Observable</a><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-waitForEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-waitForEvent' class='name expandable'>waitForEvent</a>( <span class='pre'>Ext.util.Observable observable,  event,  callback,  scope,  timeout</span> )</div><div class='description'><div class='short'>This method will wait till the first event, fired on the provided observable and then will call the provided callback. ...</div><div class='long'><p>This method will wait till the first <code>event</code>, fired on the provided <code>observable</code> and then will call the provided callback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable to wait on</p>\n</div></li><li><span class='pre'>event</span> : <div class='sub-desc'><p>The name of the event to wait for</p>\n</div></li><li><span class='pre'>callback</span> : <div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : <div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : <div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForRowsVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Grid' rel='Siesta.Test.ExtJS.Grid' class='defined-in docClass'>Siesta.Test.ExtJS.Grid</a><br/><a href='source/Grid.html#Siesta-Test-ExtJS-Grid-method-waitForRowsVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Grid-method-waitForRowsVisible' class='name expandable'>waitForRowsVisible</a>( <span class='pre'>Ext.panel.Table panel, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits for the rows of a gridpanel or tree panel to render and then calls the supplied callback. ...</div><div class='long'><p>Waits for the rows of a gridpanel or tree panel to render and then calls the supplied callback. Please note, that if the store of the grid has no records,\nthe condition for this waiter will never be fullfilled.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>panel</span> : Ext.panel.Table<div class='sub-desc'><p>The table panel</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForStoresToLoad' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Store' rel='Siesta.Test.ExtJS.Store' class='defined-in docClass'>Siesta.Test.ExtJS.Store</a><br/><a href='source/Store.html#Siesta-Test-ExtJS-Store-method-waitForStoresToLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Store-method-waitForStoresToLoad' class='name expandable'>waitForStoresToLoad</a>( <span class='pre'>Ext.data.AbstractStore store1, Ext.data.AbstractStore store2, Ext.data.AbstractStore storeN, Function callback</span> )</div><div class='description'><div class='short'>Waits until all the passed stores have been loaded (fires the \"load\" event) and calls the provided callback. ...</div><div class='long'><p>Waits until all the passed stores have been loaded (fires the \"load\" event) and calls the provided callback.</p>\n\n<p>This method accepts either variable number of arguments:</p>\n\n<pre><code> t.waitForStoresToLoad(store1, store2, function () { ... })\n</code></pre>\n\n<p>or array of stores:</p>\n\n<pre><code> t.waitForStoresToLoad([ store1, store2 ], function () { ... })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store1</span> : Ext.data.AbstractStore<div class='sub-desc'><p>The store to load.</p>\n</div></li><li><span class='pre'>store2</span> : Ext.data.AbstractStore<div class='sub-desc'><p>The store to load.</p>\n</div></li><li><span class='pre'>storeN</span> : Ext.data.AbstractStore<div class='sub-desc'><p>The store to load.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met.</p>\n</div></li></ul></div></div></div><div id='method-waitForViewRendered' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.DataView' rel='Siesta.Test.ExtJS.DataView' class='defined-in docClass'>Siesta.Test.ExtJS.DataView</a><br/><a href='source/DataView.html#Siesta-Test-ExtJS-DataView-method-waitForViewRendered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.DataView-method-waitForViewRendered' class='name expandable'>waitForViewRendered</a>( <span class='pre'>Ext.view.View view, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits for the items of a dataview to render and then calls the supplied callback. ...</div><div class='long'><p>Waits for the items of a dataview to render and then calls the supplied callback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Ext.view.View<div class='sub-desc'><p>The view</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>A function to call when the condition has been met.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-waitForXType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Component' rel='Siesta.Test.ExtJS.Component' class='defined-in docClass'>Siesta.Test.ExtJS.Component</a><br/><a href='source/Component.html#Siesta-Test-ExtJS-Component-method-waitForXType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Component-method-waitForXType' class='name expandable'>waitForXType</a>( <span class='pre'>String xtype, Ext.Container root, Function callback, Object scope, Int timeout</span> )</div><div class='description'><div class='short'>Waits until the a component with the specified xtype can be detected by a simple ComponentQuery. ...</div><div class='long'><p>Waits until the a component with the specified xtype can be detected by a simple ComponentQuery.</p>\n\n<p>The \"root\" argument of this method can be omitted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xtype</span> : String<div class='sub-desc'><p>The component xtype to look for.</p>\n</div></li><li><span class='pre'>root</span> : Ext.Container<div class='sub-desc'><p>The container to start a component query from. Optional</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call after the xtype has been found</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : Int<div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-willFireNTimes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Observable' rel='Siesta.Test.ExtJS.Observable' class='defined-in docClass'>Siesta.Test.ExtJS.Observable</a><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-willFireNTimes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-willFireNTimes' class='name expandable'>willFireNTimes</a>( <span class='pre'>Ext.util.Observable observable, String event, Number n, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the observable fires the specified event exactly (n) times during the test execution. ...</div><div class='long'><p>This assertion passes if the observable fires the specified event exactly (n) times during the test execution.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable instance</p>\n</div></li><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of event</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The expected number of events to be fired</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-wontFire' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test.ExtJS.Observable' rel='Siesta.Test.ExtJS.Observable' class='defined-in docClass'>Siesta.Test.ExtJS.Observable</a><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-wontFire' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-wontFire' class='name expandable'>wontFire</a>( <span class='pre'>Ext.util.Observable observable, String event, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the observable does not fire the specified event through the duration of the entire test. ...</div><div class='long'><p>This assertion passes if the observable does not fire the specified event through the duration of the entire test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable instance</p>\n</div></li><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of event</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-beforetestfinalize' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-beforetestfinalize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-beforetestfinalize' class='name expandable'>beforetestfinalize</a>( <span class='pre'>JooseX.Observable.Event event, <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a> test</span> )</div><div class='description'><div class='short'>This event is fired before the individual test case ends (no any corresponded harness actions will be run yet). ...</div><div class='long'><p>This event is fired before the individual test case ends (no any corresponded harness actions will be run yet).</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Harness\" rel=\"Siesta.Harness\" class=\"docClass\">harness</a>, you can observe it on harness as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that is about to finalize</p>\n</div></li></ul></div></div></div><div id='event-testfailedwithexception' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-testfailedwithexception' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-testfailedwithexception' class='name expandable'>testfailedwithexception</a>( <span class='pre'>JooseX.Observable.Event event, <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a> test, Object exception</span> )</div><div class='description'><div class='short'>This event is fired when the individual test case has threw an exception. ...</div><div class='long'><p>This event is fired when the individual test case has threw an exception.</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Harness\" rel=\"Siesta.Harness\" class=\"docClass\">harness</a>, you can observe it on harness as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that just has threw an exception</p>\n</div></li><li><span class='pre'>exception</span> : Object<div class='sub-desc'><p>The exception thrown</p>\n</div></li></ul></div></div></div><div id='event-testfinalize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-testfinalize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-testfinalize' class='name expandable'>testfinalize</a>( <span class='pre'>JooseX.Observable.Event event, <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a> test</span> )</div><div class='description'><div class='short'>This event is fired when the individual test case ends (either because it has completed correctly and threw an except...</div><div class='long'><p>This event is fired when the individual test case ends (either because it has completed correctly and threw an exception).</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Harness\" rel=\"Siesta.Harness\" class=\"docClass\">harness</a>, you can observe it on harness as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that just has completed</p>\n</div></li></ul></div></div></div><div id='event-teststart' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-teststart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-teststart' class='name expandable'>teststart</a>( <span class='pre'>JooseX.Observable.Event event, <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a> test</span> )</div><div class='description'><div class='short'>This event is fired when the individual test case starts. ...</div><div class='long'><p>This event is fired when the individual test case starts.</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Harness\" rel=\"Siesta.Harness\" class=\"docClass\">harness</a>, you can observe it on harness as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that just has started</p>\n</div></li></ul></div></div></div><div id='event-testupdate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='defined-in docClass'>Siesta.Test</a><br/><a href='source/Test.html#Siesta-Test-event-testupdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test-event-testupdate' class='name expandable'>testupdate</a>( <span class='pre'>JooseX.Observable.Event event, <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a> test, Siesta.Result result</span> )</div><div class='description'><div class='short'>This event is fired when the individual test case receives new result (assertion or diagnostic message). ...</div><div class='long'><p>This event is fired when the individual test case receives new result (assertion or diagnostic message).</p>\n\n<p>This event bubbles up to the <a href=\"#!/api/Siesta.Harness\" rel=\"Siesta.Harness\" class=\"docClass\">harness</a>, you can observe it on harness as well.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>test</span> : <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a><div class='sub-desc'><p>The test instance that just has started</p>\n</div></li><li><span class='pre'>result</span> : Siesta.Result<div class='sub-desc'><p>The new result. Instance of Siesta.Result.Assertion or Siesta.Result.Diagnostic classes</p>\n</div></li></ul></div></div></div></div></div></div></div>","alternateClassNames":[],"members":{"css_mixin":[],"method":[{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"Ext","id":"method-Ext"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"beginAsync","id":"method-beginAsync"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"chain","id":"method-chain"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"click","id":"method-click"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"clickCQ","id":"method-clickCQ"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"clickComponentQuery","id":"method-clickComponentQuery"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"compareObjects","id":"method-compareObjects"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"diag","id":"method-diag"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"done","id":"method-done"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"doubleClick","id":"method-doubleClick"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"drag","id":"method-drag"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"dragBy","id":"method-dragBy"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"dragTo","id":"method-dragTo"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Browser","name":"elementFromPoint","id":"method-elementFromPoint"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"endAsync","id":"method-endAsync"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"endWait","id":"method-endWait"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"expectGlobals","id":"method-expectGlobals"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"fail","id":"method-fail"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"firesAtLeastNTimes","id":"method-firesAtLeastNTimes"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"firesOk","id":"method-firesOk"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Grid","name":"getCell","id":"method-getCell"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"getExt","id":"method-getExt"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Grid","name":"getFirstCell","id":"method-getFirstCell"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.DataView","name":"getFirstItem","id":"method-getFirstItem"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Grid","name":"getFirstRow","id":"method-getFirstRow"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Grid","name":"getLastCellInRow","id":"method-getLastCellInRow"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Grid","name":"getRow","id":"method-getRow"},{"tagname":"method","meta":{},"owner":"Siesta.Test.TextSelection","name":"getSelectedText","id":"method-getSelectedText"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"hasListener","id":"method-hasListener"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"hasPosition","id":"method-hasPosition"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Element","name":"hasRegion","id":"method-hasRegion"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"hasSize","id":"method-hasSize"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.FormField","name":"hasValue","id":"method-hasValue"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"is","id":"method-is"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"isApprox","id":"method-isApprox"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Function","name":"isCalled","id":"method-isCalled"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Function","name":"isCalledNTimes","id":"method-isCalledNTimes"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Date","name":"isDateEqual","id":"method-isDateEqual"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"isDeeply","id":"method-isDeeply"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"isDeeplyStrict","id":"method-isDeeplyStrict"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"isGreater","id":"method-isGreater"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"isGreaterOrEqual","id":"method-isGreaterOrEqual"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"isLess","id":"method-isLess"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"isLessOrEqual","id":"method-isLessOrEqual"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"isNot","id":"method-isNot"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"isNotStrict","id":"method-isNotStrict"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"isStrict","id":"method-isStrict"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"isaOk","id":"method-isaOk"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Function","name":"isntCalled","id":"method-isntCalled"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Keyboard","name":"keyPress","id":"method-keyPress"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"knownBugIn","id":"method-knownBugIn"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"like","id":"method-like"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"livesOk","id":"method-livesOk"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Store","name":"loadStoresAndThen","id":"method-loadStoresAndThen"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Grid","name":"matchGridCellContent","id":"method-matchGridCellContent"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"mouseDown","id":"method-mouseDown"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"mouseOut","id":"method-mouseOut"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"mouseOver","id":"method-mouseOver"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"mouseUp","id":"method-mouseUp"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"moveMouseBy","id":"method-moveMouseBy"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"moveMouseTo","id":"method-moveMouseTo"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"notOk","id":"method-notOk"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"ok","id":"method-ok"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"pass","id":"method-pass"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"requireOk","id":"method-requireOk"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"rightClick","id":"method-rightClick"},{"tagname":"method","meta":{},"owner":"Siesta.Test.TextSelection","name":"selectText","id":"method-selectText"},{"tagname":"method","meta":{},"owner":"Siesta.Test.Simulate.Event","name":"simulateEvent","id":"method-simulateEvent"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"throwsOk","id":"method-throwsOk"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"todo","id":"method-todo"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS","name":"type","id":"method-type"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"typeOf","id":"method-typeOf"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"unlike","id":"method-unlike"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"verifyGlobals","id":"method-verifyGlobals"},{"tagname":"method","meta":{},"owner":"Siesta.Test","name":"wait","id":"method-wait"},{"tagname":"method","meta":{},"owner":"Siesta.Test.More","name":"waitFor","id":"method-waitFor"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForCQ","id":"method-waitForCQ"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForCQNotFound","id":"method-waitForCQNotFound"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForCQVisible","id":"method-waitForCQVisible"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForComponent","id":"method-waitForComponent"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForComponentNotVisible","id":"method-waitForComponentNotVisible"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForComponentQuery","id":"method-waitForComponentQuery"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForComponentQueryNotFound","id":"method-waitForComponentQueryNotFound"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForComponentQueryVisible","id":"method-waitForComponentQueryVisible"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForComponentVisible","id":"method-waitForComponentVisible"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"waitForEvent","id":"method-waitForEvent"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Grid","name":"waitForRowsVisible","id":"method-waitForRowsVisible"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Store","name":"waitForStoresToLoad","id":"method-waitForStoresToLoad"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.DataView","name":"waitForViewRendered","id":"method-waitForViewRendered"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Component","name":"waitForXType","id":"method-waitForXType"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"willFireNTimes","id":"method-willFireNTimes"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"wontFire","id":"method-wontFire"}],"cfg":[{"tagname":"cfg","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"dragDelay","id":"cfg-dragDelay"},{"tagname":"cfg","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"dragPrecision","id":"cfg-dragPrecision"},{"tagname":"cfg","meta":{},"owner":"Siesta.Test.Simulate.Mouse","name":"moveCursorBetweenPoints","id":"cfg-moveCursorBetweenPoints"},{"tagname":"cfg","meta":{},"owner":"Siesta.Test.Simulate.Event","name":"simulateEventsWith","id":"cfg-simulateEventsWith"},{"tagname":"cfg","meta":{},"owner":"Siesta.Test.More","name":"waitForTimeout","id":"cfg-waitForTimeout"}],"property":[],"css_var":[],"event":[{"tagname":"event","meta":{},"owner":"Siesta.Test","name":"beforetestfinalize","id":"event-beforetestfinalize"},{"tagname":"event","meta":{},"owner":"Siesta.Test","name":"testfailedwithexception","id":"event-testfailedwithexception"},{"tagname":"event","meta":{},"owner":"Siesta.Test","name":"testfinalize","id":"event-testfinalize"},{"tagname":"event","meta":{},"owner":"Siesta.Test","name":"teststart","id":"event-teststart"},{"tagname":"event","meta":{},"owner":"Siesta.Test","name":"testupdate","id":"event-testupdate"}]},"component":false,"html_meta":{},"tagname":"class","singleton":false,"statics":{"css_mixin":[],"method":[],"cfg":[],"property":[],"event":[],"css_var":[]},"mixedInto":[],"mixins":["Siesta.Test.ExtJS.Observable","Siesta.Test.ExtJS.FormField","Siesta.Test.ExtJS.Component","Siesta.Test.ExtJS.Element","Siesta.Test.ExtJS.Store","Siesta.Test.ExtJS.DataView","Siesta.Test.ExtJS.Grid"],"code_type":"nop","inheritable":false,"files":[{"href":"ExtJS2.html#Siesta-Test-ExtJS","filename":"ExtJS.js"}],"parentMixins":["Siesta.Test.Simulate.Event","Siesta.Test.TextSelection","Siesta.Test.More","Siesta.Test.Date","Siesta.Test.Function"],"name":"Siesta.Test.ExtJS","meta":{},"requires":[],"id":"class-Siesta.Test.ExtJS","subclasses":[],"aliases":{},"inheritdoc":null});