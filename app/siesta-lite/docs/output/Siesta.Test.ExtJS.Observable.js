Ext.data.JsonP.Siesta_Test_ExtJS_Observable({"superclasses":[],"extends":null,"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixed into</h4><div class='dependency'><a href='#!/api/Siesta.Test.ExtJS' rel='Siesta.Test.ExtJS' class='docClass'>Siesta.Test.ExtJS</a></div><h4>Files</h4><div class='dependency'><a href='source/Observable.html#Siesta-Test-ExtJS-Observable' target='_blank'>Observable.js</a></div></pre><div class='doc-contents'><p>This is a mixin, with helper methods for testing functionality relating to Ext.util.Observable class. This mixin is being consumed by <a href=\"#!/api/Siesta.Test.ExtJS\" rel=\"Siesta.Test.ExtJS\" class=\"docClass\">Siesta.Test.ExtJS</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-firesAtLeastNTimes' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS.Observable'>Siesta.Test.ExtJS.Observable</span><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-firesAtLeastNTimes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-firesAtLeastNTimes' class='name expandable'>firesAtLeastNTimes</a>( <span class='pre'>Ext.util.Observable observable, String event, Number n, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the observable does not fire the specified event through the duration of the entire test. ...</div><div class='long'><p>This assertion passes if the observable does not fire the specified event through the duration of the entire test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable instance</p>\n</div></li><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of event</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The minimum number of events to be fired</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-firesOk' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS.Observable'>Siesta.Test.ExtJS.Observable</span><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-firesOk' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-firesOk' class='name expandable'>firesOk</a>( <span class='pre'>Ext.util.Observable observable, String event, Number n, Number timeOut, Function func, String desc, Function callback</span> )</div><div class='description'><div class='short'>This assertion can be expressed as the following statement: When calling the passed\nfunction func, the passed observa...</div><div class='long'><p>This assertion can be expressed as the following statement: When calling the passed\nfunction <code>func</code>, the passed <code>observable</code> will fire the <code>event</code> <code>n</code> times, during the\nfollowing <code>timeOut</code> milliseconds.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable instance</p>\n</div></li><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of event</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The expected number of events</p>\n</div></li><li><span class='pre'>timeOut</span> : Number<div class='sub-desc'><p>The number of milliseconds to wait for events to be fired</p>\n</div></li><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>The function which should fire the events to detect</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Optional. A callback to call after the assertion was checked.</p>\n</div></li></ul></div></div></div><div id='method-hasListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS.Observable'>Siesta.Test.ExtJS.Observable</span><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'>Ext.util.Observable observable,  eventName</span> )</div><div class='description'><div class='short'>This method checks if the provided observable has a listener for the eventName ...</div><div class='long'><p>This method checks if the provided <code>observable</code> has a listener for the <code>eventName</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'>\n</div></li><li><span class='pre'>eventName</span> : <div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-waitForEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS.Observable'>Siesta.Test.ExtJS.Observable</span><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-waitForEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-waitForEvent' class='name expandable'>waitForEvent</a>( <span class='pre'>Ext.util.Observable observable,  event,  callback,  scope,  timeout</span> )</div><div class='description'><div class='short'>This method will wait till the first event, fired on the provided observable and then will call the provided callback. ...</div><div class='long'><p>This method will wait till the first <code>event</code>, fired on the provided <code>observable</code> and then will call the provided callback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable to wait on</p>\n</div></li><li><span class='pre'>event</span> : <div class='sub-desc'><p>The name of the event to wait for</p>\n</div></li><li><span class='pre'>callback</span> : <div class='sub-desc'><p>The callback to call</p>\n</div></li><li><span class='pre'>scope</span> : <div class='sub-desc'><p>The scope for the callback</p>\n</div></li><li><span class='pre'>timeout</span> : <div class='sub-desc'><p>The maximum amount of time to wait for the condition to be fulfilled. Defaults to the <a href=\"#!/api/Siesta.Test.ExtJS-cfg-waitForTimeout\" rel=\"Siesta.Test.ExtJS-cfg-waitForTimeout\" class=\"docClass\">Siesta.Test.ExtJS.waitForTimeout</a> value.</p>\n</div></li></ul></div></div></div><div id='method-willFireNTimes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS.Observable'>Siesta.Test.ExtJS.Observable</span><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-willFireNTimes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-willFireNTimes' class='name expandable'>willFireNTimes</a>( <span class='pre'>Ext.util.Observable observable, String event, Number n, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the observable fires the specified event exactly (n) times during the test execution. ...</div><div class='long'><p>This assertion passes if the observable fires the specified event exactly (n) times during the test execution.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable instance</p>\n</div></li><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of event</p>\n</div></li><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The expected number of events to be fired</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div><div id='method-wontFire' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.ExtJS.Observable'>Siesta.Test.ExtJS.Observable</span><br/><a href='source/Observable.html#Siesta-Test-ExtJS-Observable-method-wontFire' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.ExtJS.Observable-method-wontFire' class='name expandable'>wontFire</a>( <span class='pre'>Ext.util.Observable observable, String event, String desc</span> )</div><div class='description'><div class='short'>This assertion passes if the observable does not fire the specified event through the duration of the entire test. ...</div><div class='long'><p>This assertion passes if the observable does not fire the specified event through the duration of the entire test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>observable</span> : Ext.util.Observable<div class='sub-desc'><p>The observable instance</p>\n</div></li><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of event</p>\n</div></li><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>The description of the assertion.</p>\n</div></li></ul></div></div></div></div></div></div></div>","alternateClassNames":[],"members":{"css_mixin":[],"method":[{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"firesAtLeastNTimes","id":"method-firesAtLeastNTimes"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"firesOk","id":"method-firesOk"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"hasListener","id":"method-hasListener"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"waitForEvent","id":"method-waitForEvent"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"willFireNTimes","id":"method-willFireNTimes"},{"tagname":"method","meta":{},"owner":"Siesta.Test.ExtJS.Observable","name":"wontFire","id":"method-wontFire"}],"cfg":[],"property":[],"css_var":[],"event":[]},"component":false,"html_meta":{},"tagname":"class","singleton":false,"statics":{"css_mixin":[],"method":[],"cfg":[],"property":[],"event":[],"css_var":[]},"mixedInto":["Siesta.Test.ExtJS"],"mixins":[],"code_type":"nop","inheritable":false,"files":[{"href":"Observable.html#Siesta-Test-ExtJS-Observable","filename":"Observable.js"}],"parentMixins":[],"name":"Siesta.Test.ExtJS.Observable","meta":{},"requires":[],"id":"class-Siesta.Test.ExtJS.Observable","subclasses":[],"aliases":{},"inheritdoc":null});